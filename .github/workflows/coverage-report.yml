# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
# ---------------------------------------------------------------------------
# test
name: coverage-report

on:
  pull_request_target:

jobs:
  report:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      issues: write

    steps:

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          check-latest: true

      - name: Checkout apache repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: apache/camel-k
          path: old

      - name: Get Old Coverage
        shell: bash
        run: |
          cd old
          old_coverage="$(grep -o -P '(?<=Coverage-)(.*)(?=%)' README.adoc)"
          cd ..
          echo "OLD_COV=$old_coverage" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          path: new

      - name: Get New Coverage
        shell: bash
        run: |
          cd new
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

          new_coverage="$(grep -o -P '(?<=\(statements\))(.+)(?=%)' coverage.out | xargs)"
          echo "NEW_COV=$new_coverage" >> $GITHUB_ENV
          
          coverage_difference=`echo "$new_coverage-${{env.OLD_COV}}" | bc`
          echo "COV_DIFF=$coverage_difference" >> $GITHUB_ENV

          if (( $(echo "$coverage_difference > 0" |bc -l) )); then
          echo "POS_DIFF=POS" >> $GITHUB_ENV  
          elif (( $(echo "$coverage_difference < 0" |bc -l) )); then
          echo "POS_DIFF=NEG" >> $GITHUB_ENV
          else
          echo "POS_DIFF=ZERO" >> $GITHUB_ENV
          fi
         
      - name: Save env variables
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
          echo ${{env.OLD_COV}} > ./pr/OLD_COV
          echo ${{env.NEW_COV}} > ./pr/NEW_COV
          echo ${{env.COV_DIFF}} > ./pr/COV_DIFF
          echo ${{env.POS_DIFF}} > ./pr/POS_DIFF
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/
