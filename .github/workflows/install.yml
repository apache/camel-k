# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: install

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  pull_request:
    branches:
      - main
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - 'proposals/**'
      - '**.adoc'
      - '**.md'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  push:
    branches:
      - main
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - 'proposals/**'
      - '**.adoc'
      - '**.md'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  workflow_dispatch:
    inputs:
      log-level:
        description: 'Set the operator log level (info or debug)'
        required: false
      pre-built-kamel-image:
        description: 'Kamel image url for skipping building of kamel stages. Used for debugging'
        required: false
      skip-problematic:
        description: 'Whether tests marked as problematic should be skipped - false by default (sets CAMEL_K_TEST_SKIP_PROBLEMATIC)'
        required: false
        default: false
      test-filters:
        description: |
          List of comma-separated key/value pairs to filter the tests in this test suite:
            TEST_INSTALL_RUN,           TEST_INSTALL_CLI_RUN,
            TEST_INSTALL_KUSTOMIZE_RUN, TEST_QUARKUS_RUN
          eg. TEST_INTEGRATION_COMMON_RUN=TestBasic will only run tests prefixed with 'TestBasic'
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  non-olm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        submodules: recursive
    - name: Install Helm
      shell: bash
      run: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        sudo apt-get install apt-transport-https --yes
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update
        sudo apt-get install helm
    - name: Convert input parameters to env vars
      shell: bash
      run: |
        ./.github/workflows/manual-exec-process-inputs.sh \
          -i "${{ github.event.inputs.pre-built-kamel-image }}" \
          -p "${{ github.event.inputs.skip-problematic }}" \
          -q "${{ github.event.inputs.log-level }}" \
          -t "${{ github.event.inputs.test-filters }}"

    - name: Install (Non OLM)
      uses: ./.github/actions/e2e-install
      with:
        cluster-config-data: ${{ secrets.E2E_CLUSTER_CONFIG }}
        cluster-kube-config-data: ${{ secrets.E2E_KUBE_CONFIG }}

  olm:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        submodules: recursive
    - name: Convert input parameters to env vars
      shell: bash
      run: |
        ./.github/workflows/manual-exec-process-inputs.sh \
          -i "${{ github.event.inputs.pre-built-kamel-image }}" \
          -p "${{ github.event.inputs.skip-problematic }}" \
          -q "${{ github.event.inputs.log-level }}" \
          -t "${{ github.event.inputs.test-filters }}"

    - name: Install (OLM)
      uses: ./.github/actions/e2e-install-olm
      with:
        cluster-config-data: ${{ secrets.E2E_CLUSTER_CONFIG }}
        cluster-kube-config-data: ${{ secrets.E2E_KUBE_CONFIG }}

  upgrade:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        submodules: recursive
    - name: Convert input parameters to env vars
      shell: bash
      run: |
        ./.github/workflows/manual-exec-process-inputs.sh \
          -i "${{ github.event.inputs.pre-built-kamel-image }}" \
          -p "${{ github.event.inputs.skip-problematic }}" \
          -q "${{ github.event.inputs.log-level }}" \
          -t "${{ github.event.inputs.test-filters }}"

    - name: Upgrade
      uses: ./.github/actions/e2e-install-upgrade
      with:
        cluster-config-data: ${{ secrets.E2E_CLUSTER_CONFIG }}
        cluster-kube-config-data: ${{ secrets.E2E_KUBE_CONFIG }}
