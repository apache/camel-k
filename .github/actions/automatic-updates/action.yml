# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: automatic-updates
description: 'action used to run automation required by the project'

inputs:
  branch-ref:
    required: true
    type: string
  secretGithubToken:
    required: true
  goVersionFile:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Install Go ${{ inputs.goVersionFile }}
      uses: actions/setup-go@v4
      with:
        go-version-file: ${{ inputs.goVersionFile }}
        check-latest: true
    - name: Generate changelog
      uses: ./.github/actions/changelog
      with:
        token: ${{ inputs.secretGithubToken }}
        release_branch: ${{ inputs.branch-ref }}

    # Changelog
    - name: Commit changelog
      shell: bash
      env:
        CI_USER: "github-actions[bot]"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      run: |
        git config --local user.email "$CI_EMAIL"
        git config --local user.name "$CI_USER"
        git add CHANGELOG.md && git commit -m 'chore: changelog automatic update' && echo "changelog=1" >> $GITHUB_ENV || echo "No changes to changelog"

    # Autogenerated
    - name: Run refresh actions and commit
      shell: bash
      env:
        CI_USER: "github-actions[bot]"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      run: |
        make generate codegen update-docs
        git add -A && git commit -m 'chore: autogenerated project resource update' && echo "autogenerated=1" >> $GITHUB_ENV || echo "No changes to autogenerated project resources"

    # SBOM
    - name: Generate SBOM
      uses: ./.github/actions/gh-go-mod-generate-sbom
      with:
        version: v1
        args: mod -licenses -json -output camel-k-sbom/camel-k-sbom.json
    - name: Commit SBOM
      shell: bash
      env:
        CI_USER: "github-actions[bot]"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      run: |
        git add camel-k-sbom/camel-k-sbom.json && git commit -m 'chore: nightly SBOM update' && echo "sbom=1" >> $GITHUB_ENV || echo "No changes to SBOM"

    # Coverage badge
    - name: Run Test
      shell: bash
      run: |
        go test -v ./... -covermode=count -coverprofile=coverage.out
        go tool cover -func=coverage.out -o=coverage.out
        touch badge.out
    - name: Go Coverage Badge
      uses: ./.github/actions/coverage-badge
      with:
        filename: coverage.out
        target: badge.out
    - name: Convert Badge to adoc
      shell: bash
      run: |
        replacement=$(grep -o 'https://[^)]*' badge.out)
        target="(?:https:\/\/img\.shields\.io\/badge\/Coverage).*?(?=\.svg)"
        perl -i -pe "s|${target}|${replacement}|g" README.adoc
    - name: Commit changes
      shell: bash
      env:
        CI_USER: "github-actions[bot]"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      run: |
        git config --local user.email "$CI_EMAIL"
        git config --local user.name "$CI_USER"
        git add -A && git commit -m 'chore: nightly coverage badge update' && echo "badge=1" >> $GITHUB_ENV || echo "No changes to coverage badge"

    # Git push
    - name: Push changes
      shell: bash
      if: env.changelog == 1 || env.autogenerated == 1 || env.sbom == 1 || env.badge == 1
      env:
        CI_USER: "github-actions[bot]"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
        CI_TOKEN: ${{ inputs.secretGithubToken }}
      run: |
        git push "https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:${{ inputs.branch-ref }}

    # Give it a rest to avoid hitting Github API rate limit
    - name: Sleep
      shell: bash
      run: |
        sleep 1800
