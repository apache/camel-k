# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: e2e-common
description: 'End-to-End tests for common use-cases'

inputs:
  cluster-config-data:
    description: 'The configuration of the underlying cluster (if cluster-type is custom)'
    required: false
  cluster-kube-config-data:
    description: 'Base16 encoded kube config - required for custom cluster type only'
    required: false
  with-custom-install:
    description: 'Indicates whether the advanced common integration tests should be launched (default false)'
    default: 'false'
    required: false
  smoke-test-only:
    description: 'Only run a subset of tests'
    default: 'false'
    required: false

runs:
  using: "composite"

  steps:
  - id: prepare-env
    name: Prepare Test Environment
    uses: ./.github/actions/kamel-prepare-env

  - id: config-cluster
    name: Configure Platform
    uses: ./.github/actions/kamel-config-cluster
    with:
      cluster-config-data: ${{ inputs.cluster-config-data }}
      cluster-kube-config-data: ${{ inputs.cluster-kube-config-data }}
  #
  # Try and ensure the cluster is in a vanilla state before
  # starting in on an installation
  #
  - id: pre-clean-cluster
    name: Pre Clean Cluster
    uses: ./.github/actions/kamel-cleanup
    if: ${{ always() }}
    with:
      catalog-source-name: ${{ steps.config-cluster.outputs.cluster-catalog-source-name }}
      catalog-source-namespace: ${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}
      image-namespace: ${{ steps.config-cluster.outputs.cluster-image-namespace }}
      global-operator-namespace: ${{ steps.config-cluster.outputs.cluster-global-operator-namespace }}

  - id: build-kamel
    name: Build Kamel
    uses: ./.github/actions/kamel-build
    with:
      image-registry-push-host: ${{ steps.config-cluster.outputs.cluster-image-registry-push-host }}
      image-registry-pull-host: ${{ steps.config-cluster.outputs.cluster-image-registry-pull-host }}
      image-namespace: ${{ steps.config-cluster.outputs.cluster-image-namespace }}
      # Builds the bundle if an OLM is available - depends on cluster being tested
      build-bundle: ${{ steps.config-cluster.outputs.cluster-has-olm }}
      # Both can be empty and so catalog source will not be created
      catalog-source-name: ${{ steps.config-cluster.outputs.cluster-catalog-source-name }}
      catalog-source-namespace: ${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}

  - id: install-kamel-cluster-setup
    name: Install Kamel Cluster Setup
    uses: ./.github/actions/kamel-install-cluster-setup
    with:
      kube-admin-user-ctx: ${{ steps.config-cluster.outputs.cluster-kube-admin-user-ctx }}

  - id: preflight-test
    name: Preflight Check Test
    uses: ./.github/actions/kamel-preflight-test
    with:
      catalog-source-name: ${{ steps.config-cluster.outputs.cluster-catalog-source-name }}
      catalog-source-namespace: ${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}
      image-namespace: ${{ steps.config-cluster.outputs.cluster-image-namespace }}
      image-registry-host: ${{ steps.config-cluster.outputs.cluster-image-registry-pull-host }}
      image-name: ${{ steps.build-kamel.outputs.build-binary-local-image-name }}
      image-registry-insecure: ${{steps.config-cluster.outputs.cluster-image-registry-insecure }}
      image-version: ${{ steps.build-kamel.outputs.build-binary-local-image-version }}

  - id: install-global-operator
    name: "Install Global Operator"
    if: ${{ steps.config-cluster.outputs.cluster-global-operator-namespace }}
    uses: ./.github/actions/kamel-install-global-operator
    with:
      global-operator-namespace: ${{ steps.config-cluster.outputs.cluster-global-operator-namespace }}
      catalog-source-name: ${{ steps.config-cluster.outputs.cluster-catalog-source-name }}
      catalog-source-namespace: ${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}
      image-namespace: ${{ steps.config-cluster.outputs.cluster-image-namespace }}
      image-registry-host: ${{ steps.config-cluster.outputs.cluster-image-registry-pull-host }}
      image-name: ${{ steps.build-kamel.outputs.build-binary-local-image-name }}
      image-registry-insecure: ${{steps.config-cluster.outputs.cluster-image-registry-insecure }}
      image-version: ${{ steps.build-kamel.outputs.build-binary-local-image-version }}

  - id: report-problematic
    name: List Tests Marked As Problematic
    uses: ./.github/actions/kamel-report-problematic
    with:
      test-suite: global/common

  - id: run-it
    name: Run IT
    shell: bash
    run: |
      ./.github/actions/e2e-common/exec-tests.sh \
        -b "${{ steps.config-cluster.outputs.cluster-catalog-source-name }}" \
        -c "${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}" \
        -g "${{ steps.config-cluster.outputs.cluster-global-operator-namespace }}" \
        -i "${{ steps.config-cluster.outputs.cluster-image-namespace }}" \
        -l "${{ steps.config-cluster.outputs.cluster-image-registry-pull-host }}" \
        -n "${{ steps.build-kamel.outputs.build-binary-local-image-name }}" \
        -q "${{ env.CAMEL_K_LOG_LEVEL }}" \
        -s "${{steps.config-cluster.outputs.cluster-image-registry-insecure }}" \
        -v "${{ steps.build-kamel.outputs.build-binary-local-image-version }}" \
        -x "${{ env.CAMEL_K_TEST_SAVE_FAILED_TEST_NAMESPACE }}" \
        -y "${{ inputs.smoke-test-only }}" \
        -z "${{ inputs.with-custom-install }}"

  - name: Cleanup
    uses: ./.github/actions/kamel-cleanup
    if: ${{ always() }}
    with:
      catalog-source-name: ${{ steps.config-cluster.outputs.cluster-catalog-source-name }}
      catalog-source-namespace: ${{ steps.config-cluster.outputs.cluster-catalog-source-namespace }}
      image-namespace: ${{ steps.config-cluster.outputs.cluster-image-namespace }}
      global-operator-namespace: ${{ steps.config-cluster.outputs.cluster-global-operator-namespace }}
