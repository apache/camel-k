# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: kamel-build-bundle
description: 'Builds kamel operator metadata bundle'

inputs:
  image-registry:
    description: 'Location of image registry to push bundle'
    required: true
  local-image-name:
    description: 'Reference of the camel-k image'
    required: true
  local-image-version:
    description: "Reference of the camel-k image version"
    required: true

runs:
  using: "composite"
  steps:

    - id: build-bundle-image
      name: Build Operator bundle
      shell: bash
      run: |
        echo "Build Operator bundle"
        if ! command -v kustomize &> /dev/null
        then
          echo "kustomize could not be found. Has it not been installed?"
          exit 1
        fi

        # replace image
        $(cd config/manifests && kustomize edit set image "docker.io/apache/camel-k=${{ inputs.local-image-name }}:${{ inputs.local-image-version }}")

        # Patch CSV with the 'replaces' field to define the upgrade graph
        # Use sed as the manifest/bases file is not included in the kustomize config
        BASE_VERSION=$(echo ${{ inputs.local-image-version }} | grep -Po "\d.\d.\d")
        sed -i "/  version: ${BASE_VERSION}/a \ \ replaces: camel-k-operator.v$(make get-last-released-version)" config/manifests/bases/camel-k.clusterserviceversion.yaml

        export CUSTOM_IMAGE=${{ inputs.local-image-name }}
        export LOCAL_IMAGE_BUNDLE=${{ inputs.image-registry }}/apache/camel-k-bundle:${{ inputs.local-image-version }}
        export PREV_XY_CHANNEL=stable-$(make get-last-released-version | grep -Po "\d.\d")
        echo "PREV_XY_CHANNEL=${PREV_XY_CHANNEL}" >> $GITHUB_ENV
        export NEW_XY_CHANNEL=stable-$(make get-version | grep -Po "\d.\d")
        echo "NEW_XY_CHANNEL=${NEW_XY_CHANNEL}" >> $GITHUB_ENV
        make bundle-build BUNDLE_IMAGE_NAME=${LOCAL_IMAGE_BUNDLE} DEFAULT_CHANNEL="${NEW_XY_CHANNEL}" CHANNELS="${NEW_XY_CHANNEL}"
        docker push ${LOCAL_IMAGE_BUNDLE}

        echo "::set-output name=local-image-bundle::$(echo ${LOCAL_IMAGE_BUNDLE})"

    - id: build-index-image
      name: Create New Index Image
      shell: bash
      run: |
        export LOCAL_IIB=${{ inputs.image-registry }}/apache/camel-k-iib:${{ inputs.local-image-version }}
        if ! command -v opm &> /dev/null
        then
          echo "opm could not be found. Has it not been installed?"
          exit 1
        fi

        opm index add --bundles ${{ steps.build-bundle-image.outputs.local-image-bundle }} -c docker --from-index quay.io/operatorhubio/catalog:latest --tag ${LOCAL_IIB} --skip-tls
        docker push ${LOCAL_IIB}

        echo "::set-output name=local-image-bundle-index::$(echo ${LOCAL_IIB})"

outputs:
  local-image-bundle:
    description: "Reference of the camel-k metadata bundle image"
    value: ${{ steps.build-bundle-image.outputs.local-image-bundle }}
  local-image-bundle-index:
    description: "Reference of the camel-k metadata bundle index image"
    value: ${{ steps.build-index-image.outputs.local-image-bundle-index }}
