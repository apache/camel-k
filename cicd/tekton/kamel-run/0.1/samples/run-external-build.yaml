---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: external-build
spec:
  workspaces:
  - name: shared-workspace
  - name: maven-settings
  tasks:
  # Fetch git repo
  - name: fetch-repository
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: https://github.com/apache/camel-k-runtime
  # Build the application
  - name: maven-build
    taskRef:
      name: maven
    runAfter:
    - fetch-repository
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: maven-settings
      workspace: maven-settings
    params:
    - name: CONTEXT_DIR
      value: "examples/yaml"
    - name: GOALS
      value:
        - clean
        - package
  # Create the dockerfile (could be already in the git project, in such case, just skip this task)
  - name: create-dockerfile
    runAfter:
    - maven-build
    workspaces:
    - name: source
      workspace: shared-workspace
    taskSpec:
      steps:
      - name: bash
        image: ubuntu
        script: |
          echo "FROM docker.io/eclipse-temurin:17-jdk" > $(workspaces.source.path)/examples/yaml/Dockerfile
          echo "COPY target/quarkus-app/ /deployments/dependencies/" >> $(workspaces.source.path)/examples/yaml/Dockerfile
  # Build and push the container with the Camel application
  - name: docker-build
    taskRef:
      name: buildah
    runAfter:
    - create-dockerfile
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: IMAGE
      # Provide your container registry configuration accordingly!
      value: 10.110.149.72/camel-k/my-camel-image
    - name: TLSVERIFY
      value: "false"
    - name: CONTEXT
      value: $(workspaces.source.path)/examples/yaml
  # Run the Camel Integration, using the container image built previously
  - name: kamel-run
    taskRef:
      name: kamel-run
    runAfter:
    - docker-build
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: filename
      value: examples/yaml/data/routes.yaml
    - name: container-image
      value: $(tasks.docker-build.results.IMAGE_URL)

---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: external-build-run
spec:
  pipelineRef:
    name: external-build
  taskRunSpecs:
    - pipelineTaskName: kamel-run
      taskServiceAccountName: camel-k-tekton
  workspaces:
  - name: shared-workspace
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: maven-settings
    emptyDir: {}
