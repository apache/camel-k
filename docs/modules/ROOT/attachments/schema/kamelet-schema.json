{
  "description": "Kamelet is the Schema for the kamelets API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KameletSpec defines the desired state of Kamelet",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "AuthorizationSpec is TODO (oauth information)",
          "type": "object"
        },
        "definition": {
          "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
          "type": "object",
          "properties": {
            "$schema": {
              "description": "JSONSchemaURL represents a schema url.",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "example": {
              "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "externalDocs": {
              "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "default": {
                    "description": "default is a default value for undefined object fields.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "description": {
                    "type": "string"
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "example": {
                    "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "exclusiveMaximum": {
                    "type": "boolean"
                  },
                  "exclusiveMinimum": {
                    "type": "boolean"
                  },
                  "format": {
                    "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: \n - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\\\d{3}[- ]?\\\\d{2}[- ]?\\\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "maxItems": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maxLength": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maxProperties": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maximum": {
                    "description": "A Number represents a JSON number literal.",
                    "type": "string"
                  },
                  "minItems": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "minLength": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "minProperties": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "minimum": {
                    "description": "A Number represents a JSON number literal.",
                    "type": "string"
                  },
                  "multipleOf": {
                    "description": "A Number represents a JSON number literal.",
                    "type": "string"
                  },
                  "nullable": {
                    "type": "boolean"
                  },
                  "pattern": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "uniqueItems": {
                    "type": "boolean"
                  },
                  "x-descriptors": {
                    "description": "The list of descriptors that determine which UI components to use on different views",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flow": {
          "maxProperties": 1,
          "properties": {
            "error-handler": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ErrorHandlerStepParser$Definition"
            },
            "from": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.FromStepParser$Definition"
            },
            "on-exception": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition"
            },
            "rest": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.RestStepParser$Definition"
            },
            "route": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.RouteStepParser$Definition"
            }
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "description": "SourceSpec --",
            "type": "object",
            "properties": {
              "compression": {
                "type": "boolean"
              },
              "content": {
                "type": "string"
              },
              "contentKey": {
                "type": "string"
              },
              "contentRef": {
                "type": "string"
              },
              "contentType": {
                "type": "string"
              },
              "interceptors": {
                "description": "Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "language": {
                "description": "Language --",
                "type": "string"
              },
              "loader": {
                "description": "Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "property-names": {
                "description": "List of property names defined in the source (e.g. if type is \"template\")",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rawContent": {
                "type": "string",
                "format": "byte"
              },
              "type": {
                "description": "Type defines the kind of source described by this object",
                "type": "string"
              }
            }
          }
        },
        "types": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "mediaType": {
                "type": "string"
              },
              "schema": {
                "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
                "type": "object",
                "properties": {
                  "$schema": {
                    "description": "JSONSchemaURL represents a schema url.",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "example": {
                    "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "externalDocs": {
                    "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "default is a default value for undefined object fields.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "enum": {
                          "type": "array",
                          "items": {
                            "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "example": {
                          "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "exclusiveMaximum": {
                          "type": "boolean"
                        },
                        "exclusiveMinimum": {
                          "type": "boolean"
                        },
                        "format": {
                          "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: \n - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\\\d{3}[- ]?\\\\d{2}[- ]?\\\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxLength": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxProperties": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maximum": {
                          "description": "A Number represents a JSON number literal.",
                          "type": "string"
                        },
                        "minItems": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "minLength": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "minProperties": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "minimum": {
                          "description": "A Number represents a JSON number literal.",
                          "type": "string"
                        },
                        "multipleOf": {
                          "description": "A Number represents a JSON number literal.",
                          "type": "string"
                        },
                        "nullable": {
                          "type": "boolean"
                        },
                        "pattern": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "uniqueItems": {
                          "type": "boolean"
                        },
                        "x-descriptors": {
                          "description": "The list of descriptors that determine which UI components to use on different views",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "KameletStatus defines the observed state of Kamelet",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "description": "KameletCondition describes the state of a resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "The last time this condition was updated.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of kamelet condition.",
                "type": "string"
              }
            }
          }
        },
        "phase": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "default": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "dataformats": {
      "type": "object",
      "properties": {
        "any23": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.Any23DataFormat"
        },
        "asn1": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.ASN1DataFormat"
        },
        "avro": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.AvroDataFormat"
        },
        "barcode": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.BarcodeDataFormat"
        },
        "base64": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.Base64DataFormat"
        },
        "beanio": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.BeanioDataFormat"
        },
        "bindy": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.BindyDataFormat"
        },
        "cbor": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.CBORDataFormat"
        },
        "crypto": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.CryptoDataFormat"
        },
        "csv": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.CsvDataFormat"
        },
        "custom-data-format": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.CustomDataFormat"
        },
        "fhir-json": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.FhirJsonDataFormat"
        },
        "fhir-xml": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.FhirXmlDataFormat"
        },
        "flatpack": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.FlatpackDataFormat"
        },
        "grok": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.GrokDataFormat"
        },
        "gzipdeflater": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.GzipDataFormat"
        },
        "hl7": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.HL7DataFormat"
        },
        "ical": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.IcalDataFormat"
        },
        "jacksonxml": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.JacksonXMLDataFormat"
        },
        "jaxb": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.JaxbDataFormat"
        },
        "json": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.JsonDataFormat"
        },
        "json-api": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.JsonApiDataFormat"
        },
        "lzf": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.LZFDataFormat"
        },
        "mime-multipart": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.MimeMultipartDataFormat"
        },
        "pgp": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.PGPDataFormat"
        },
        "protobuf": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.ProtobufDataFormat"
        },
        "rss": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.RssDataFormat"
        },
        "secure-xml": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.XMLSecurityDataFormat"
        },
        "soapjaxb": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.SoapJaxbDataFormat"
        },
        "syslog": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.SyslogDataFormat"
        },
        "tarfile": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.TarFileDataFormat"
        },
        "thrift": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.ThriftDataFormat"
        },
        "tidy-markup": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.TidyMarkupDataFormat"
        },
        "univocity-csv": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.UniVocityCsvDataFormat"
        },
        "univocity-fixed": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat"
        },
        "univocity-tsv": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.UniVocityTsvDataFormat"
        },
        "xmlrpc": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.XmlRpcDataFormat"
        },
        "xstream": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.XStreamDataFormat"
        },
        "yaml": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.YAMLDataFormat"
        },
        "zipdeflater": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.ZipDeflaterDataFormat"
        },
        "zipfile": {
          "$ref": "#/definitions/org.apache.camel.model.dataformat.ZipFileDataFormat"
        }
      }
    },
    "expressions": {
      "type": "object",
      "properties": {
        "constant": {
          "$ref": "#/definitions/org.apache.camel.model.language.ConstantExpression"
        },
        "csimple": {
          "$ref": "#/definitions/org.apache.camel.model.language.CSimpleExpression"
        },
        "datasonnet": {
          "$ref": "#/definitions/org.apache.camel.model.language.DatasonnetExpression"
        },
        "exchange-property": {
          "$ref": "#/definitions/org.apache.camel.model.language.ExchangePropertyExpression"
        },
        "groovy": {
          "$ref": "#/definitions/org.apache.camel.model.language.GroovyExpression"
        },
        "header": {
          "$ref": "#/definitions/org.apache.camel.model.language.HeaderExpression"
        },
        "hl7terser": {
          "$ref": "#/definitions/org.apache.camel.model.language.Hl7TerserExpression"
        },
        "joor": {
          "$ref": "#/definitions/org.apache.camel.model.language.JoorExpression"
        },
        "jsonpath": {
          "$ref": "#/definitions/org.apache.camel.model.language.JsonPathExpression"
        },
        "language": {
          "$ref": "#/definitions/org.apache.camel.model.language.LanguageExpression"
        },
        "method": {
          "$ref": "#/definitions/org.apache.camel.model.language.MethodCallExpression"
        },
        "mvel": {
          "$ref": "#/definitions/org.apache.camel.model.language.MvelExpression"
        },
        "ognl": {
          "$ref": "#/definitions/org.apache.camel.model.language.OgnlExpression"
        },
        "ref": {
          "$ref": "#/definitions/org.apache.camel.model.language.RefExpression"
        },
        "simple": {
          "$ref": "#/definitions/org.apache.camel.model.language.SimpleExpression"
        },
        "spel": {
          "$ref": "#/definitions/org.apache.camel.model.language.SpELExpression"
        },
        "tokenize": {
          "$ref": "#/definitions/org.apache.camel.model.language.TokenizerExpression"
        },
        "xpath": {
          "$ref": "#/definitions/org.apache.camel.model.language.XPathExpression"
        },
        "xquery": {
          "$ref": "#/definitions/org.apache.camel.model.language.XQueryExpression"
        },
        "xtokenize": {
          "$ref": "#/definitions/org.apache.camel.model.language.XMLTokenizerExpression"
        }
      }
    },
    "org.apache.camel.builder.DeadLetterChannelBuilder": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "async-delayed-redelivery": {
              "type": "boolean"
            },
            "dead-letter-handle-new-exception": {
              "type": "boolean"
            },
            "use-original-body": {
              "type": "boolean"
            },
            "use-original-message": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.builder.DefaultErrorHandlerBuilder": {
      "type": "object",
      "properties": {
        "async-delayed-redelivery": {
          "type": "boolean"
        },
        "dead-letter-handle-new-exception": {
          "type": "boolean"
        },
        "use-original-body": {
          "type": "boolean"
        },
        "use-original-message": {
          "type": "boolean"
        }
      }
    },
    "org.apache.camel.builder.ErrorHandlerBuilderRef": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "support-transacted": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.builder.ErrorHandlerBuilderSupport": {
      "type": "object"
    },
    "org.apache.camel.builder.NoErrorHandlerBuilder": {
      "type": "object"
    },
    "org.apache.camel.k.loader.yaml.parser.AggregateStepParser$CorrelationExpression": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {}
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.AggregateStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "aggregate-controller-ref": {
              "type": "string"
            },
            "aggregation-repository-ref": {
              "type": "string"
            },
            "close-correlation-key-on-completion": {
              "type": "string"
            },
            "complete-all-on-stop": {
              "type": "string"
            },
            "completion-from-batch-consumer": {
              "type": "string"
            },
            "completion-interval": {
              "type": "string"
            },
            "completion-on-new-correlation-group": {
              "type": "string"
            },
            "completion-size": {
              "type": "string"
            },
            "completion-timeout": {
              "type": "string"
            },
            "completion-timeout-checker-interval": {
              "type": "string"
            },
            "correlation-expression": {
              "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.AggregateStepParser$CorrelationExpression"
            },
            "discard-on-aggregation-failure": {
              "type": "string"
            },
            "discard-on-completion-timeout": {
              "type": "string"
            },
            "eager-check-completion": {
              "type": "string"
            },
            "executor-service-ref": {
              "type": "string"
            },
            "force-completion-on-stop": {
              "type": "string"
            },
            "ignore-invalid-correlation-keys": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "optimistic-locking": {
              "type": "string"
            },
            "parallel-processing": {
              "type": "string"
            },
            "strategy-method-allow-null": {
              "type": "string"
            },
            "strategy-method-name": {
              "type": "string"
            },
            "strategy-ref": {
              "type": "string"
            },
            "timeout-checker-executor-service-ref": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.BeansStepParser$Definition": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition": {
      "type": "object",
      "properties": {
        "otherwise": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition$Otherwise"
        },
        "when": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition$When"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition$Otherwise": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition$When": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.CircuitBreakerStepParser$CBDefinition": {
      "type": "object",
      "properties": {
        "on-fallback": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.CircuitBreakerStepParser$FBDefinition"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.CircuitBreakerStepParser$FBDefinition": {
      "type": "object",
      "properties": {
        "fallback-via-network": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.DelayStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "async-delayed": {
              "type": "string"
            },
            "caller-runs-when-rejected": {
              "type": "string"
            },
            "executor-service-ref": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.DoTryStepParser$DoCatchDefinition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.DoTryStepParser$DoFinallyDefinition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.DoTryStepParser$DoTryDefinition": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.DynamicRouterStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "cache-size": {
              "type": "string"
            },
            "ignore-invalid-endpoints": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "uri-delimiter": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.EnrichStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "aggregate-on-exception": {
              "type": "string"
            },
            "cache-size": {
              "type": "string"
            },
            "ignore-invalid-endpoint": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "share-unit-of-work": {
              "type": "string"
            },
            "strategy-method-allow-null": {
              "type": "string"
            },
            "strategy-method-name": {
              "type": "string"
            },
            "strategy-ref": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ErrorHandlerStepParser$Definition": {
      "type": "object",
      "properties": {
        "dead-letter-channel": {
          "$ref": "#/definitions/org.apache.camel.builder.DeadLetterChannelBuilder"
        },
        "default": {
          "$ref": "#/definitions/org.apache.camel.builder.DefaultErrorHandlerBuilder"
        },
        "no-error-handler": {
          "$ref": "#/definitions/org.apache.camel.builder.NoErrorHandlerBuilder"
        },
        "ref": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.FilterStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.FromStepParser$Definition": {
      "type": "object",
      "required": [
        "steps",
        "uri"
      ],
      "properties": {
        "parameters": {
          "type": "object"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.IdempotentConsumerParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "completion-eager": {
              "type": "string"
            },
            "eager": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "message-id-repository-ref": {
              "type": "string"
            },
            "remove-on-failure": {
              "type": "string"
            },
            "skip-duplicate": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.LoadBalanceStepParser$Definition": {
      "type": "object",
      "properties": {
        "custom": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.CustomLoadBalancerDefinition"
        },
        "failover": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "random": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.RandomLoadBalancerDefinition"
        },
        "round-robin": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.RoundRobinLoadBalancerDefinition"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "sticky": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.LoadBalanceStepParser$Definition$Sticky"
        },
        "topic": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.TopicLoadBalancerDefinition"
        },
        "type": {
          "$ref": "#/definitions/org.apache.camel.model.LoadBalancerDefinition"
        },
        "weighted": {
          "$ref": "#/definitions/org.apache.camel.model.loadbalancer.WeightedLoadBalancerDefinition"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.LoadBalanceStepParser$Definition$Sticky": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.LoopStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "break-on-shutdown": {
              "type": "string"
            },
            "copy": {
              "type": "string"
            },
            "do-while": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.MarshalStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/dataformats"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.MulticastStepParser$Definition": {
      "type": "object",
      "properties": {
        "executor-service-ref": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "on-prepare-ref": {
          "type": "string"
        },
        "parallel-aggregate": {
          "type": "string"
        },
        "parallel-processing": {
          "type": "string"
        },
        "share-unit-of-work": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "stop-on-aggregate-exception": {
          "type": "string"
        },
        "stop-on-exception": {
          "type": "string"
        },
        "strategy-method-allow-null": {
          "type": "string"
        },
        "strategy-method-name": {
          "type": "string"
        },
        "strategy-ref": {
          "type": "string"
        },
        "streaming": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition$ExpressionElement": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {}
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition$MaybeBooleanExpressionElement": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {}
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition$When": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.PipelineStepParser$Definition": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.PollEnrichStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "aggregate-on-exception": {
              "type": "string"
            },
            "cache-size": {
              "type": "string"
            },
            "ignore-invalid-endpoint": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "strategy-method-allow-null": {
              "type": "string"
            },
            "strategy-method-name": {
              "type": "string"
            },
            "strategy-ref": {
              "type": "string"
            },
            "timeout": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ProcessStepParser$Definition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "ref": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.RecipientListStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "cache-size": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            },
            "executor-service-ref": {
              "type": "string"
            },
            "ignore-invalid-endpoints": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "on-prepare-ref": {
              "type": "string"
            },
            "parallel-aggregate": {
              "type": "string"
            },
            "parallel-processing": {
              "type": "string"
            },
            "share-unit-of-work": {
              "type": "string"
            },
            "stop-on-aggregate-exception": {
              "type": "string"
            },
            "stop-on-exception": {
              "type": "string"
            },
            "strategy-method-allow-null": {
              "type": "string"
            },
            "strategy-method-name": {
              "type": "string"
            },
            "strategy-ref": {
              "type": "string"
            },
            "streaming": {
              "type": "string"
            },
            "timeout": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ResequenceStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "batch-config": {
              "$ref": "#/definitions/org.apache.camel.model.config.BatchResequencerConfig"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            },
            "stream-config": {
              "$ref": "#/definitions/org.apache.camel.model.config.StreamResequencerConfig"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.RestStepParser$Definition": {
      "type": "object",
      "properties": {
        "api-docs": {
          "type": "boolean"
        },
        "binding-mode": {
          "enum": [
            "auto",
            "off",
            "json",
            "xml",
            "json_xml"
          ]
        },
        "consumes": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enable-cors": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "out-type": {
          "type": "string"
        },
        "produces": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.RouteStepParser$Definition": {
      "type": "object",
      "required": [
        "from",
        "steps"
      ],
      "properties": {
        "auto-startup": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.RouteStepParser$From"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.RouteStepParser$From": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "uri"
          ],
          "properties": {
            "parameters": {
              "type": "object"
            },
            "uri": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.RoutingSlipStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "cache-size": {
              "type": "string"
            },
            "ignore-invalid-endpoints": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "uri-delimiter": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SagaStepParser$Definition": {
      "type": "object",
      "properties": {
        "completion-mode": {
          "type": "string",
          "enum": [
            "AUTO",
            "MANUAL"
          ]
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "propagation": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "REQUIRES_NEW",
            "MANDATORY",
            "SUPPORTS",
            "NOT_SUPPORTED",
            "NEVER"
          ]
        },
        "saga-service-ref": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "timeout": {
          "type": "string"
        },
        "timeout-in-milliseconds": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.SampleStepParser$Definition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "message-frequency": {
          "type": "string"
        },
        "sample-period": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "units": {
          "type": "string",
          "enum": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ]
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ScriptStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ServiceCallStepParser$Definition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/expressions"
            },
            {}
          ]
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ServiceCallStepParser$ServiceCallExpressionDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "host-header": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "port-header": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SetBodyStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SetExchangePatternStepParser$Definition": {
      "type": "object",
      "required": [
        "pattern"
      ],
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "pattern": {
          "type": "string",
          "enum": [
            "InOnly",
            "InOut",
            "InOptionalOut"
          ]
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.SetHeaderStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SetPropertyStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SortStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "comparator-ref": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.SplitStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "delimiter": {
              "type": "string"
            },
            "executor-service-ref": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "on-prepare-ref": {
              "type": "string"
            },
            "parallel-aggregate": {
              "type": "string"
            },
            "parallel-processing": {
              "type": "string"
            },
            "share-unit-of-work": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/step"
              }
            },
            "stop-on-aggregate-exception": {
              "type": "string"
            },
            "stop-on-exception": {
              "type": "string"
            },
            "strategy-method-allow-null": {
              "type": "string"
            },
            "strategy-method-name": {
              "type": "string"
            },
            "strategy-ref": {
              "type": "string"
            },
            "streaming": {
              "type": "string"
            },
            "timeout": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.StepStepParser$Definition": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ThrottleStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "async-delayed": {
              "type": "string"
            },
            "caller-runs-when-rejected": {
              "type": "string"
            },
            "executor-service-ref": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "reject-execution": {
              "type": "string"
            },
            "time-period-millis": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ThrowExceptionStepParser$Definition": {
      "type": "object",
      "properties": {
        "exception-type": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.ToDynamicStepParser$Definition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "uri"
          ],
          "properties": {
            "allow-optimised-components": {
              "type": "string"
            },
            "auto-start-components": {
              "type": "string"
            },
            "cache-size": {
              "type": "string"
            },
            "ignore-invalid-endpoint": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "parameters": {
              "type": "object"
            },
            "pattern": {
              "type": "string",
              "enum": [
                "InOnly",
                "InOut",
                "InOptionalOut"
              ]
            },
            "uri": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ToStepParser$Definition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "uri"
          ],
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "parameters": {
              "type": "object"
            },
            "pattern": {
              "type": "string",
              "enum": [
                "InOnly",
                "InOut",
                "InOptionalOut"
              ]
            },
            "uri": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.TransactedStepParser$Definition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        },
        "ref": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.TransformStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.UnmarshalStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/dataformats"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.ValidateStepParser$Definition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.WireTapStepParser$Definition": {
      "type": "object",
      "required": [
        "uri"
      ],
      "properties": {
        "allow-optimised-components": {
          "type": "string"
        },
        "auto-start-components": {
          "type": "string"
        },
        "cache-size": {
          "type": "string"
        },
        "ignore-invalid-endpoint": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "pattern": {
          "type": "string",
          "enum": [
            "InOnly",
            "InOut",
            "InOptionalOut"
          ]
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.k.loader.yaml.parser.WireTapStepParser$HeaderDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.k.loader.yaml.parser.WireTapStepParser$NewExchangeDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/expressions"
        },
        {}
      ]
    },
    "org.apache.camel.model.BeanDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "bean-type": {
              "type": "string"
            },
            "cache": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "method": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "scope": {
              "type": "string",
              "enum": [
                "Singleton",
                "Request",
                "Prototype"
              ]
            }
          }
        }
      ]
    },
    "org.apache.camel.model.ClaimCheckDefinition": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "operation": {
          "type": "string",
          "enum": [
            "Get",
            "GetAndRemove",
            "Set",
            "Push",
            "Pop"
          ]
        },
        "strategy-method-name": {
          "type": "string"
        },
        "strategy-ref": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.ConvertBodyDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "charset": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.LoadBalancerDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.LogDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "log-name": {
              "type": "string"
            },
            "logger-ref": {
              "type": "string"
            },
            "logging-level": {
              "type": "string",
              "enum": [
                "TRACE",
                "DEBUG",
                "INFO",
                "WARN",
                "ERROR",
                "OFF"
              ]
            },
            "marker": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.RemoveHeaderDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "header-name": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.RemoveHeadersDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "exclude-pattern": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "pattern": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.RemovePropertiesDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "exclude-pattern": {
              "type": "string"
            },
            "inherit-error-handler": {
              "type": "boolean"
            },
            "pattern": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.RemovePropertyDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "property-name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.RollbackDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "inherit-error-handler": {
              "type": "boolean"
            },
            "mark-rollback-only": {
              "type": "string"
            },
            "mark-rollback-only-last": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.StopDefinition": {
      "type": "object",
      "properties": {
        "inherit-error-handler": {
          "type": "boolean"
        }
      }
    },
    "org.apache.camel.model.ThreadsDefinition": {
      "type": "object",
      "properties": {
        "allow-core-thread-time-out": {
          "type": "string"
        },
        "caller-runs-when-rejected": {
          "type": "string"
        },
        "executor-service-ref": {
          "type": "string"
        },
        "inherit-error-handler": {
          "type": "boolean"
        },
        "keep-alive-time": {
          "type": "string"
        },
        "max-pool-size": {
          "type": "string"
        },
        "max-queue-size": {
          "type": "string"
        },
        "pool-size": {
          "type": "string"
        },
        "rejected-policy": {
          "type": "string",
          "enum": [
            "Abort",
            "CallerRuns",
            "DiscardOldest",
            "Discard"
          ]
        },
        "thread-name": {
          "type": "string"
        },
        "time-unit": {
          "type": "string",
          "enum": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ]
        }
      }
    },
    "org.apache.camel.model.config.BatchResequencerConfig": {
      "type": "object",
      "properties": {
        "allow-duplicates": {
          "type": "string"
        },
        "batch-size": {
          "type": "string"
        },
        "batch-timeout": {
          "type": "string"
        },
        "ignore-invalid-exchanges": {
          "type": "string"
        },
        "reverse": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.config.StreamResequencerConfig": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "string"
        },
        "comparator-ref": {
          "type": "string"
        },
        "delivery-attempt-interval": {
          "type": "string"
        },
        "ignore-invalid-exchanges": {
          "type": "string"
        },
        "reject-old": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.ASN1DataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "clazz-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "using-iterator": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.Any23DataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "base-uri": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "output-format": {
              "type": "string",
              "enum": [
                "NTRIPLES",
                "TURTLE",
                "NQUADS",
                "RDFXML",
                "JSONLD",
                "RDFJSON",
                "RDF4JMODEL"
              ]
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.AvroDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "instance-class-name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.BarcodeDataFormat": {
      "type": "object",
      "properties": {
        "barcode-format": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "image-type": {
          "type": "string"
        },
        "width": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.Base64DataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "line-length": {
          "type": "string"
        },
        "line-separator": {
          "type": "string"
        },
        "url-safe": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.BeanioDataFormat": {
      "type": "object",
      "properties": {
        "bean-reader-error-handler-type": {
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-invalid-records": {
          "type": "string"
        },
        "ignore-unexpected-records": {
          "type": "string"
        },
        "ignore-unidentified-records": {
          "type": "string"
        },
        "mapping": {
          "type": "string"
        },
        "stream-name": {
          "type": "string"
        },
        "unmarshal-single-object": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.BindyDataFormat": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "allow-empty-stream": {
          "type": "string"
        },
        "class-type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Csv",
            "Fixed",
            "KeyValue"
          ]
        },
        "unwrap-single-instance": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.CBORDataFormat": {
      "type": "object",
      "properties": {
        "allow-jms-type": {
          "type": "string"
        },
        "allow-unmarshall-type": {
          "type": "string"
        },
        "collection-type-name": {
          "type": "string"
        },
        "disable-features": {
          "type": "string"
        },
        "enable-features": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "object-mapper": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "unmarshal-type-name": {
          "type": "string"
        },
        "use-default-object-mapper": {
          "type": "string"
        },
        "use-list": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.CryptoDataFormat": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "algorithm-parameter-ref": {
          "type": "string"
        },
        "buffersize": {
          "type": "string"
        },
        "crypto-provider": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "init-vector-ref": {
          "type": "string"
        },
        "inline": {
          "type": "string"
        },
        "key-ref": {
          "type": "string"
        },
        "mac-algorithm": {
          "type": "string"
        },
        "should-append-hmac": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.CsvDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "allow-missing-column-names": {
              "type": "string"
            },
            "comment-marker": {
              "type": "string"
            },
            "comment-marker-disabled": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            },
            "escape": {
              "type": "string"
            },
            "escape-disabled": {
              "type": "string"
            },
            "format-name": {
              "type": "string",
              "enum": [
                "DEFAULT",
                "EXCEL",
                "INFORMIX_UNLOAD",
                "INFORMIX_UNLOAD_CSV",
                "MYSQL",
                "RFC4180"
              ]
            },
            "format-ref": {
              "type": "string"
            },
            "header-disabled": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "ignore-empty-lines": {
              "type": "string"
            },
            "ignore-header-case": {
              "type": "string"
            },
            "ignore-surrounding-spaces": {
              "type": "string"
            },
            "lazy-load": {
              "type": "string"
            },
            "marshaller-factory-ref": {
              "type": "string"
            },
            "null-string": {
              "type": "string"
            },
            "null-string-disabled": {
              "type": "string"
            },
            "quote": {
              "type": "string"
            },
            "quote-disabled": {
              "type": "string"
            },
            "quote-mode": {
              "type": "string"
            },
            "record-converter-ref": {
              "type": "string"
            },
            "record-separator": {
              "type": "string"
            },
            "record-separator-disabled": {
              "type": "string"
            },
            "skip-header-record": {
              "type": "string"
            },
            "trailing-delimiter": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            },
            "use-maps": {
              "type": "string"
            },
            "use-ordered-maps": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.CustomDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.FhirJsonDataFormat": {
      "type": "object",
      "properties": {
        "content-type-header": {
          "type": "string"
        },
        "dont-encode-elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dont-strip-versions-from-references-at-paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encode-elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encode-elements-applies-to-child-resources-only": {
          "type": "string"
        },
        "fhir-version": {
          "type": "string",
          "enum": [
            "DSTU2",
            "DSTU2_HL7ORG",
            "DSTU2_1",
            "DSTU3",
            "R4"
          ]
        },
        "id": {
          "type": "string"
        },
        "omit-resource-id": {
          "type": "string"
        },
        "override-resource-id-with-bundle-entry-full-url": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "server-base-url": {
          "type": "string"
        },
        "strip-versions-from-references": {
          "type": "string"
        },
        "summary-mode": {
          "type": "string"
        },
        "suppress-narratives": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.FhirXmlDataFormat": {
      "type": "object",
      "properties": {
        "content-type-header": {
          "type": "string"
        },
        "dont-encode-elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dont-strip-versions-from-references-at-paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encode-elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encode-elements-applies-to-child-resources-only": {
          "type": "string"
        },
        "fhir-version": {
          "type": "string",
          "enum": [
            "DSTU2",
            "DSTU2_HL7ORG",
            "DSTU2_1",
            "DSTU3",
            "R4"
          ]
        },
        "id": {
          "type": "string"
        },
        "omit-resource-id": {
          "type": "string"
        },
        "override-resource-id-with-bundle-entry-full-url": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "server-base-url": {
          "type": "string"
        },
        "strip-versions-from-references": {
          "type": "string"
        },
        "summary-mode": {
          "type": "string"
        },
        "suppress-narratives": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.FlatpackDataFormat": {
      "type": "object",
      "properties": {
        "allow-short-lines": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "fixed": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-extra-columns": {
          "type": "string"
        },
        "ignore-first-record": {
          "type": "string"
        },
        "parser-factory-ref": {
          "type": "string"
        },
        "text-qualifier": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.GrokDataFormat": {
      "type": "object",
      "properties": {
        "allow-multiple-matches-per-line": {
          "type": "string"
        },
        "flattened": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "named-only": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.GzipDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.HL7DataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "validate": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.IcalDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "validating": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.JacksonXMLDataFormat": {
      "type": "object",
      "properties": {
        "allow-jms-type": {
          "type": "string"
        },
        "allow-unmarshall-type": {
          "type": "string"
        },
        "collection-type-name": {
          "type": "string"
        },
        "content-type-header": {
          "type": "string"
        },
        "disable-features": {
          "type": "string"
        },
        "enable-features": {
          "type": "string"
        },
        "enable-jaxb-annotation-module": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "include": {
          "type": "string"
        },
        "json-view-type-name": {
          "type": "string"
        },
        "module-class-names": {
          "type": "string"
        },
        "module-refs": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "unmarshal-type-name": {
          "type": "string"
        },
        "use-list": {
          "type": "string"
        },
        "xml-mapper": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.JaxbDataFormat": {
      "type": "object",
      "properties": {
        "content-type-header": {
          "type": "string"
        },
        "context-path": {
          "type": "string"
        },
        "context-path-is-class-name": {
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "filter-non-xml-chars": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-jaxb-element": {
          "type": "string"
        },
        "jaxb-provider-properties": {
          "type": "string"
        },
        "must-be-jaxb-element": {
          "type": "string"
        },
        "namespace-prefix-ref": {
          "type": "string"
        },
        "no-namespace-schema-location": {
          "type": "string"
        },
        "object-factory": {
          "type": "string"
        },
        "part-class": {
          "type": "string"
        },
        "part-namespace": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "schema-location": {
          "type": "string"
        },
        "schema-severity-level": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "xml-stream-writer-wrapper": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.JsonApiDataFormat": {
      "type": "object",
      "properties": {
        "data-format-types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "main-format-type": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.JsonDataFormat": {
      "type": "object",
      "properties": {
        "allow-jms-type": {
          "type": "string"
        },
        "allow-unmarshall-type": {
          "type": "string"
        },
        "auto-discover-object-mapper": {
          "type": "string"
        },
        "collection-type-name": {
          "type": "string"
        },
        "content-type-header": {
          "type": "string"
        },
        "disable-features": {
          "type": "string"
        },
        "drop-root-node": {
          "type": "string"
        },
        "enable-features": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "include": {
          "type": "string"
        },
        "json-view-type-name": {
          "type": "string"
        },
        "library": {
          "enum": [
            "XStream",
            "Jackson",
            "Johnzon",
            "Gson",
            "Fastjson",
            "Jsonb"
          ]
        },
        "module-class-names": {
          "type": "string"
        },
        "module-refs": {
          "type": "string"
        },
        "object-mapper": {
          "type": "string"
        },
        "permissions": {
          "type": "string"
        },
        "pretty-print": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "unmarshal-type-name": {
          "type": "string"
        },
        "use-default-object-mapper": {
          "type": "string"
        },
        "use-list": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.LZFDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "using-parallel-compression": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.MimeMultipartDataFormat": {
      "type": "object",
      "properties": {
        "binary-content": {
          "type": "string"
        },
        "headers-inline": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "include-headers": {
          "type": "string"
        },
        "multipart-sub-type": {
          "type": "string"
        },
        "multipart-without-attachment": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.PGPDataFormat": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "armored": {
          "type": "string"
        },
        "compression-algorithm": {
          "type": "string"
        },
        "hash-algorithm": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "integrity": {
          "type": "string"
        },
        "key-file-name": {
          "type": "string"
        },
        "key-userid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "signature-key-file-name": {
          "type": "string"
        },
        "signature-key-ring": {
          "type": "string"
        },
        "signature-key-userid": {
          "type": "string"
        },
        "signature-password": {
          "type": "string"
        },
        "signature-verification-option": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.ProtobufDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "content-type-format": {
              "type": "string",
              "enum": [
                "native",
                "json"
              ]
            },
            "content-type-header": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "instance-class": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.RssDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.SoapJaxbDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "context-path": {
              "type": "string"
            },
            "element-name-strategy-ref": {
              "type": "string"
            },
            "encoding": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "namespace-prefix-ref": {
              "type": "string"
            },
            "schema": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.SyslogDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.TarFileDataFormat": {
      "type": "object",
      "properties": {
        "allow-empty-directory": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "max-decompressed-size": {
          "type": "string"
        },
        "preserve-path-elements": {
          "type": "string"
        },
        "using-iterator": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.ThriftDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "content-type-format": {
              "type": "string",
              "enum": [
                "binary",
                "json",
                "sjson"
              ]
            },
            "content-type-header": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "instance-class": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.TidyMarkupDataFormat": {
      "type": "object",
      "properties": {
        "data-object-type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "omit-xml-declaration": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.UniVocityCsvDataFormat": {
      "type": "object",
      "properties": {
        "as-map": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "empty-value": {
          "type": "string"
        },
        "header-extraction-enabled": {
          "type": "string"
        },
        "headers-disabled": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-leading-whitespaces": {
          "type": "string"
        },
        "ignore-trailing-whitespaces": {
          "type": "string"
        },
        "lazy-load": {
          "type": "string"
        },
        "line-separator": {
          "type": "string"
        },
        "normalized-line-separator": {
          "type": "string"
        },
        "null-value": {
          "type": "string"
        },
        "number-of-records-to-read": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        },
        "quote-all-fields": {
          "type": "string"
        },
        "quote-escape": {
          "type": "string"
        },
        "skip-empty-lines": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat": {
      "type": "object",
      "properties": {
        "as-map": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "empty-value": {
          "type": "string"
        },
        "header-extraction-enabled": {
          "type": "string"
        },
        "headers-disabled": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-leading-whitespaces": {
          "type": "string"
        },
        "ignore-trailing-whitespaces": {
          "type": "string"
        },
        "lazy-load": {
          "type": "string"
        },
        "line-separator": {
          "type": "string"
        },
        "normalized-line-separator": {
          "type": "string"
        },
        "null-value": {
          "type": "string"
        },
        "number-of-records-to-read": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "record-ends-on-newline": {
          "type": "string"
        },
        "skip-empty-lines": {
          "type": "string"
        },
        "skip-trailing-chars-until-newline": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.UniVocityTsvDataFormat": {
      "type": "object",
      "properties": {
        "as-map": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "empty-value": {
          "type": "string"
        },
        "escape-char": {
          "type": "string"
        },
        "header-extraction-enabled": {
          "type": "string"
        },
        "headers-disabled": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ignore-leading-whitespaces": {
          "type": "string"
        },
        "ignore-trailing-whitespaces": {
          "type": "string"
        },
        "lazy-load": {
          "type": "string"
        },
        "line-separator": {
          "type": "string"
        },
        "normalized-line-separator": {
          "type": "string"
        },
        "null-value": {
          "type": "string"
        },
        "number-of-records-to-read": {
          "type": "string"
        },
        "skip-empty-lines": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.XMLSecurityDataFormat": {
      "type": "object",
      "properties": {
        "add-key-value-for-encrypted-key": {
          "type": "string"
        },
        "digest-algorithm": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "key-cipher-algorithm": {
          "type": "string"
        },
        "key-or-trust-store-parameters-ref": {
          "type": "string"
        },
        "key-password": {
          "type": "string"
        },
        "mgf-algorithm": {
          "type": "string"
        },
        "pass-phrase": {
          "type": "string"
        },
        "pass-phrase-byte": {
          "type": "string",
          "format": "binary"
        },
        "recipient-key-alias": {
          "type": "string"
        },
        "secure-tag": {
          "type": "string"
        },
        "secure-tag-contents": {
          "type": "string"
        },
        "xml-cipher-algorithm": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.XStreamDataFormat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "content-type-header": {
              "type": "string"
            },
            "driver": {
              "type": "string"
            },
            "driver-ref": {
              "type": "string"
            },
            "encoding": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "permissions": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.dataformat.XmlRpcDataFormat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "request": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.YAMLDataFormat": {
      "type": "object",
      "properties": {
        "allow-any-type": {
          "type": "string"
        },
        "allow-recursive-keys": {
          "type": "string"
        },
        "constructor": {
          "type": "string"
        },
        "dumper-options": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "library": {
          "enum": [
            "SnakeYAML"
          ]
        },
        "max-aliases-for-collections": {
          "type": "string"
        },
        "pretty-flow": {
          "type": "string"
        },
        "representer": {
          "type": "string"
        },
        "resolver": {
          "type": "string"
        },
        "unmarshal-type-name": {
          "type": "string"
        },
        "use-application-context-class-loader": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.ZipDeflaterDataFormat": {
      "type": "object",
      "properties": {
        "compression-level": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.dataformat.ZipFileDataFormat": {
      "type": "object",
      "properties": {
        "allow-empty-directory": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "max-decompressed-size": {
          "type": "string"
        },
        "preserve-path-elements": {
          "type": "string"
        },
        "using-iterator": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.language.CSimpleExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "result-type": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.ConstantExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.DatasonnetExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "body-media-type": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "output-media-type": {
              "type": "string"
            },
            "result-type": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.ExchangePropertyExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.GroovyExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.HeaderExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.Hl7TerserExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.JoorExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "pre-compile": {
              "type": "string"
            },
            "result-type": {
              "type": "string"
            },
            "single-quotes": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.JsonPathExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "allow-easy-predicate": {
              "type": "string"
            },
            "allow-simple": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "header-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "option": {
              "type": "string",
              "enum": [
                "DEFAULT_PATH_LEAF_TO_NULL",
                "ALWAYS_RETURN_LIST",
                "AS_PATH_LIST",
                "SUPPRESS_EXCEPTIONS",
                "REQUIRE_PROPERTIES"
              ]
            },
            "result-type": {
              "type": "string"
            },
            "suppress-exceptions": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            },
            "write-as-string": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.LanguageExpression": {
      "type": "object",
      "required": [
        "expression"
      ],
      "properties": {
        "expression": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "trim": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.language.MethodCallExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "bean-type": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "scope": {
              "type": "string",
              "enum": [
                "Singleton",
                "Request",
                "Prototype"
              ]
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.MvelExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.OgnlExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.RefExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.SimpleExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "result-type": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.SpELExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.TokenizerExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "end-token": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "group-delimiter": {
              "type": "string"
            },
            "header-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "include-tokens": {
              "type": "string"
            },
            "inherit-namespace-tag-name": {
              "type": "string"
            },
            "regex": {
              "type": "string"
            },
            "skip-first": {
              "type": "string"
            },
            "token": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            },
            "xml": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.XMLTokenizerExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "header-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "mode": {
              "type": "string",
              "enum": [
                "i",
                "w",
                "u",
                "t"
              ]
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.XPathExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "document-type": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "factory-ref": {
              "type": "string"
            },
            "header-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "log-namespaces": {
              "type": "string"
            },
            "object-model": {
              "type": "string"
            },
            "pre-compile": {
              "type": "string"
            },
            "result-type": {
              "type": "string",
              "enum": [
                "NUMBER",
                "STRING",
                "BOOLEAN",
                "NODESET",
                "NODE"
              ]
            },
            "saxon": {
              "type": "string"
            },
            "thread-safety": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.language.XQueryExpression": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "configuration-ref": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "header-name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "trim": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.loadbalancer.CustomLoadBalancerDefinition": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            }
          }
        }
      ]
    },
    "org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "maximum-failover-attempts": {
          "type": "string"
        },
        "round-robin": {
          "type": "string"
        },
        "sticky": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.loadbalancer.RandomLoadBalancerDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.loadbalancer.RoundRobinLoadBalancerDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.loadbalancer.TopicLoadBalancerDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "org.apache.camel.model.loadbalancer.WeightedLoadBalancerDefinition": {
      "type": "object",
      "properties": {
        "distribution-ratio": {
          "type": "string"
        },
        "distribution-ratio-delimiter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "round-robin": {
          "type": "string"
        }
      }
    },
    "step": {
      "type": "object",
      "maxProperties": 1,
      "properties": {
        "aggregate": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.AggregateStepParser$Definition"
        },
        "bean": {
          "$ref": "#/definitions/org.apache.camel.model.BeanDefinition"
        },
        "choice": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ChoiceStepParser$Definition"
        },
        "circuit-breaker": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.CircuitBreakerStepParser$CBDefinition"
        },
        "claim-check": {
          "$ref": "#/definitions/org.apache.camel.model.ClaimCheckDefinition"
        },
        "convert-body-to": {
          "$ref": "#/definitions/org.apache.camel.model.ConvertBodyDefinition"
        },
        "delay": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.DelayStepParser$Definition"
        },
        "do-try": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.DoTryStepParser$DoTryDefinition"
        },
        "dynamic-router": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.DynamicRouterStepParser$Definition"
        },
        "enrich": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.EnrichStepParser$Definition"
        },
        "error-handler": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ErrorHandlerStepParser$Definition"
        },
        "filter": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.FilterStepParser$Definition"
        },
        "idempotent-consumer": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.IdempotentConsumerParser$Definition"
        },
        "load-balance": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.LoadBalanceStepParser$Definition"
        },
        "log": {
          "$ref": "#/definitions/org.apache.camel.model.LogDefinition"
        },
        "loop": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.LoopStepParser$Definition"
        },
        "marshal": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.MarshalStepParser$Definition"
        },
        "multicast": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.MulticastStepParser$Definition"
        },
        "on-exception": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.OnExceptionStepParser$Definition"
        },
        "pipeline": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.PipelineStepParser$Definition"
        },
        "poll-enrich": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.PollEnrichStepParser$Definition"
        },
        "process": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ProcessStepParser$Definition"
        },
        "recipient-list": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.RecipientListStepParser$Definition"
        },
        "remove-header": {
          "$ref": "#/definitions/org.apache.camel.model.RemoveHeaderDefinition"
        },
        "remove-headers": {
          "$ref": "#/definitions/org.apache.camel.model.RemoveHeadersDefinition"
        },
        "remove-properties": {
          "$ref": "#/definitions/org.apache.camel.model.RemovePropertiesDefinition"
        },
        "remove-property": {
          "$ref": "#/definitions/org.apache.camel.model.RemovePropertyDefinition"
        },
        "resequence": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ResequenceStepParser$Definition"
        },
        "rollback": {
          "$ref": "#/definitions/org.apache.camel.model.RollbackDefinition"
        },
        "routing-slip": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.RoutingSlipStepParser$Definition"
        },
        "saga": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SagaStepParser$Definition"
        },
        "sample": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SampleStepParser$Definition"
        },
        "script": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ScriptStepParser$Definition"
        },
        "service-call": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ServiceCallStepParser$Definition"
        },
        "set-body": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SetBodyStepParser$Definition"
        },
        "set-exchange-pattern": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SetExchangePatternStepParser$Definition"
        },
        "set-header": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SetHeaderStepParser$Definition"
        },
        "set-property": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SetPropertyStepParser$Definition"
        },
        "sort": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SortStepParser$Definition"
        },
        "split": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.SplitStepParser$Definition"
        },
        "step": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.StepStepParser$Definition"
        },
        "stop": {
          "$ref": "#/definitions/org.apache.camel.model.StopDefinition"
        },
        "threads": {
          "$ref": "#/definitions/org.apache.camel.model.ThreadsDefinition"
        },
        "throttle": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ThrottleStepParser$Definition"
        },
        "throw-exception": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ThrowExceptionStepParser$Definition"
        },
        "to": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ToStepParser$Definition"
        },
        "tod": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ToDynamicStepParser$Definition"
        },
        "transacted": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.TransactedStepParser$Definition"
        },
        "transform": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.TransformStepParser$Definition"
        },
        "unmarshal": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.UnmarshalStepParser$Definition"
        },
        "validate": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.ValidateStepParser$Definition"
        },
        "wiretap": {
          "$ref": "#/definitions/org.apache.camel.k.loader.yaml.parser.WireTapStepParser$Definition"
        }
      }
    }
  }
}